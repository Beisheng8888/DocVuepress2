import{_ as c,r as t,o as u,c as h,a as l,b as e,d as a,w as s,e as i}from"./app-6ea6c10f.js";const p={},_=e("h1",{id:"客户端-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#客户端-api","aria-hidden":"true"},"#"),a(" 客户端 API")],-1),f={href:"https://www.npmjs.com/package/@vuepress/client",target:"_blank",rel:"noopener noreferrer"},v=e("h2",{id:"composition-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#composition-api","aria-hidden":"true"},"#"),a(" Composition API")],-1),g=e("h3",{id:"usepagedata",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#usepagedata","aria-hidden":"true"},"#"),a(" usePageData")],-1),m=e("li",null,[e("p",null,"详情："),e("p",null,"返回当前页面数据的 Ref 对象。")],-1),b=e("p",null,"参考：",-1),x=e("h3",{id:"usepagefrontmatter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#usepagefrontmatter","aria-hidden":"true"},"#"),a(" usePageFrontmatter")],-1),V=e("ul",null,[e("li",null,[e("p",null,"详情："),e("p",null,"返回当前页面 Frontmatter 的 Ref 对象。"),e("p",null,[a("它的值是页面数据的 "),e("code",null,"frontmatter"),a(" 属性。")])])],-1),P=e("h3",{id:"usepagehead",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#usepagehead","aria-hidden":"true"},"#"),a(" usePageHead")],-1),R=e("p",null,"详情：",-1),S=e("p",null,"返回当前页面 Head 配置的 Ref 对象。",-1),D=i('<h3 id="usepageheadtitle" tabindex="-1"><a class="header-anchor" href="#usepageheadtitle" aria-hidden="true">#</a> usePageHeadTitle</h3><ul><li><p>详情：</p><p>返回当前页面 Head 中的标题的 Ref 对象。</p><p>它的值是连接页面标题和站点标题后得到的。</p></li></ul><h3 id="usepagelang" tabindex="-1"><a class="header-anchor" href="#usepagelang" aria-hidden="true">#</a> usePageLang</h3><ul><li><p>详情：</p><p>返回当前页面语言的 Ref 对象。</p><p>它的值是页面数据的 <code>lang</code> 属性。</p></li></ul><h3 id="useroutelocale" tabindex="-1"><a class="header-anchor" href="#useroutelocale" aria-hidden="true">#</a> useRouteLocale</h3>',5),k=e("p",null,"详情：",-1),E=e("p",null,"返回当前路由对应的 locale path 的 Ref 对象。",-1),w=i('<h3 id="usesitedata" tabindex="-1"><a class="header-anchor" href="#usesitedata" aria-hidden="true">#</a> useSiteData</h3><ul><li><p>详情：</p><p>返回站点数据的 Ref 对象。</p></li></ul><h3 id="usesitelocaledata" tabindex="-1"><a class="header-anchor" href="#usesitelocaledata" aria-hidden="true">#</a> useSiteLocaleData</h3><ul><li><p>详情：</p><p>返回当前 locale 的站点数据的 Ref 对象。</p><p>当前 locale 中的配置已经合并到顶层配置中。</p></li></ul><h2 id="工具函数" tabindex="-1"><a class="header-anchor" href="#工具函数" aria-hidden="true">#</a> 工具函数</h2><h3 id="defineclientconfig" tabindex="-1"><a class="header-anchor" href="#defineclientconfig" aria-hidden="true">#</a> defineClientConfig</h3>',6),C=e("p",null,"详情：",-1),B=e("p",null,"参考：",-1),J=e("h3",{id:"withbase",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#withbase","aria-hidden":"true"},"#"),a(" withBase")],-1),L=e("p",null,"详情：",-1),I=e("p",null,"参考：",-1),N=i(`<h2 id="常量" tabindex="-1"><a class="header-anchor" href="#常量" aria-hidden="true">#</a> 常量</h2><p>在客户端代码中有一些常量可以使用。</p><p>如果想要把这些常量的类型定义补充到你的代码环境中，请将 <code>@vuepress/client/types</code> 添加到你的 <code>tsconfig.json</code> 里：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>{
  &quot;compilerOptions&quot;: {
    &quot;types&quot;: [&quot;@vuepress/client/types&quot;]
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vuepress-version" tabindex="-1"><a class="header-anchor" href="#vuepress-version" aria-hidden="true">#</a> <code>_<wbr>_VUEPRESS_VERSION__</code></h3><ul><li><p>类型： <code>string</code></p></li><li><p>详情：</p><p>VuePress Core 的版本号。</p></li></ul><h3 id="vuepress-base" tabindex="-1"><a class="header-anchor" href="#vuepress-base" aria-hidden="true">#</a> <code>_<wbr>_VUEPRESS_BASE__</code></h3>`,7),A=e("li",null,[e("p",null,[a("类型： "),e("code",null,"string")])],-1),q=e("p",null,"详情：",-1),H=i('<h3 id="vuepress-dev" tabindex="-1"><a class="header-anchor" href="#vuepress-dev" aria-hidden="true">#</a> <code>_<wbr>_VUEPRESS_DEV__</code></h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>一个环境标记，用于标识当前是否运行在 <code>dev</code> 模式下。</p></li></ul><h3 id="vuepress-ssr" tabindex="-1"><a class="header-anchor" href="#vuepress-ssr" aria-hidden="true">#</a> <code>_<wbr>_VUEPRESS_SSR__</code></h3><ul><li><p>类型： <code>boolean</code></p></li><li><p>详情：</p><p>一个环境标记，用于标识当前是否运行在服务端渲染 (SSR) 环境下。</p></li></ul><h2 id="进阶能力" tabindex="-1"><a class="header-anchor" href="#进阶能力" aria-hidden="true">#</a> 进阶能力</h2>',5),j={id:"resolvers",tabindex:"-1"},y=e("a",{class:"header-anchor",href:"#resolvers","aria-hidden":"true"},"#",-1),F=i(`<ul><li><p>类型： <code>Record&lt;string, Function&gt;</code></p></li><li><p>详情：</p><p>一个响应式对象，其中的方法决定了如何获取全局计算属性。</p></li><li><p>示例：</p></li></ul><p>在客户端配置文件中自定义 <code>&lt;title&gt;</code> 的格式：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>import { defineClientConfig, resolvers } from &#39;@vuepress/client&#39;

export default defineClientConfig({
  enhance({ app, router, siteData }) {
    resolvers.resolvePageHeadTitle = (page, siteLocale) =&gt;
      \`\${siteLocale.title} &gt; \${page.title}\`
  },
})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">警告</p><p><code>resolvers</code> 会直接影响 VuePress 的基础功能，在修改前请确保你已充分了解其用途。</p></div>`,4);function U(T,O){const d=t("NpmBadge"),o=t("ExternalLinkIcon"),n=t("RouterLink"),r=t("Badge");return u(),h("div",null,[_,l(d,{package:"@vuepress/client"}),e("p",null,[a("客户端 API 是由 "),e("a",f,[a("@vuepress/client"),l(o)]),a(" Package 提供的，用于开发客户端文件。")]),v,g,e("ul",null,[m,e("li",null,[b,e("ul",null,[e("li",null,[l(n,{to:"/DocVuepress/Java/reference/node-api.html#data"},{default:s(()=>[a("Node API > Page 属性 > data")]),_:1})]),e("li",null,[l(n,{to:"/DocVuepress/Java/reference/plugin-api.html#extendspage"},{default:s(()=>[a("插件 API > extendsPage")]),_:1})])])])]),x,V,P,e("ul",null,[e("li",null,[R,S,e("p",null,[a("它的值是合并 "),l(n,{to:"/DocVuepress/Java/reference/frontmatter.html#head"},{default:s(()=>[a("head")]),_:1}),a(" Frontmatter 和 "),l(n,{to:"/DocVuepress/Java/reference/config.html#head"},{default:s(()=>[a("head")]),_:1}),a(" 配置，并进行去重后得到的。")])])]),D,e("ul",null,[e("li",null,[k,E,e("p",null,[a("它的值是 "),l(n,{to:"/DocVuepress/Java/reference/config.html#locales"},{default:s(()=>[a("locales")]),_:1}),a(" 配置的键之一。")])])]),w,e("ul",null,[e("li",null,[C,e("p",null,[a("帮助你创建 "),l(n,{to:"/DocVuepress/Java/reference/plugin-api.html#clientconfigfile"},{default:s(()=>[a("clientConfigFile")]),_:1}),a(" 的工具函数。")])]),e("li",null,[B,e("ul",null,[e("li",null,[l(n,{to:"/DocVuepress/Java/advanced/cookbook/usage-of-client-config.html"},{default:s(()=>[a("深入 > Cookbook > 客户端配置的使用方法")]),_:1})])])])]),J,e("ul",null,[e("li",null,[L,e("p",null,[a("在 URL 前添加站点 "),l(n,{to:"/DocVuepress/Java/reference/config.html#base"},{default:s(()=>[a("base")]),_:1}),a(" 前缀。")])]),e("li",null,[I,e("ul",null,[e("li",null,[l(n,{to:"/DocVuepress/Java/guide/assets.html#base-helper"},{default:s(()=>[a("指南 > 静态资源 > Base Helper")]),_:1})])])])]),N,e("ul",null,[A,e("li",null,[q,e("p",null,[a("配置中的 "),l(n,{to:"/DocVuepress/Java/reference/config.html#base"},{default:s(()=>[a("base")]),_:1}),a(" 字段。")])])]),H,e("h3",j,[y,a(" resolvers "),l(r,{text:"实验性能力"})]),F])}const z=c(p,[["render",U],["__file","client-api.html.vue"]]);export{z as default};
